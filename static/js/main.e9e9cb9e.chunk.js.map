{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","sortField","setSortField","useState","isReversed","setIsReversed","visibleGoods","goods","_ref","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparesGoods","_jsxs","className","children","_jsx","type","cn","onClick","resetSorting","map","good","ReactDOM","render","document","getElementById"],"mappings":"kOAKO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,sBACnBC,EAAiB,iBA0BhB,MAAMC,EAAMA,KACjB,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAYC,GAAiBF,oBAAS,GACvCG,EA3BR,SAA0BC,EAAKC,GAA8B,IAA5B,UAAEP,EAAS,WAAEG,GAAYI,EACpDC,EAAgB,IAAIF,GAgBxB,OAdIN,IACFQ,EAAgBA,EAAcC,MAAK,CAACC,EAAOC,KACzC,OAAQX,GACN,KAAKH,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAKXV,EACKK,EAAcM,UAGhBN,EAMcO,CAAiBnB,EAAiB,CACrDI,YACAG,eAUF,OACEa,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBACZ,CAAE,WAAYrB,IAAcH,IAC9ByB,QAASA,KACPrB,EAAaJ,IACbqB,SACH,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBACZ,CAAE,WAAYrB,IAAcF,IAC9BwB,QAASA,KACPrB,EAAaH,IACboB,SACH,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBACZ,CAAE,YAAalB,IACjBmB,QAASA,IAAMlB,GAAeD,GAAYe,SAC3C,aAIClB,GAAaG,IACfgB,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,4BACZ,CAAE,cAAerB,GAAaG,KAChCmB,QA9CaC,MACfvB,GAAaG,KACfF,EAAa,IACbG,GAAc,KA2CYc,SACvB,aAMHC,cAAA,MAAAD,SACGb,EAAamB,KAAIC,GAChBN,cAAA,MAAe,UAAQ,OAAMD,SAC1BO,GADMA,WCzGnBC,IAASC,OACPR,cAACpB,EAAG,IACJ6B,SAASC,eAAe,W","file":"static/js/main.e9e9cb9e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction getPreparesGoods(goods, { sortField, isReversed }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods = preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparesGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  const resetSorting = () => {\n    if (sortField || isReversed) {\n      setSortField('');\n      setIsReversed(false);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY_ALPHABET })}\n          onClick={() => {\n            setSortField(SORT_BY_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY_LENGTH })}\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n        <button\n          type=\"button\"\n          className={cn('button is-danger is-light',\n            { 'is-hidden': !(sortField || isReversed) })}\n          onClick={resetSorting}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}